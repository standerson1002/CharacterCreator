@using DataDomain
@model IEnumerable<DataDomain.UserFriend>

@{
    ViewData["Title"] = "Friends";
    IEnumerable<UserFriend> pending = ViewBag.Pending;
    IEnumerable<UserFriend> waiting = ViewBag.Waiting;
}

<h1>Friends</h1>
<div class="d-grid gap-2 mb-2">
    <p class="lead">Add your friends so you can share your characters with them!</p>
    <a class="btn btn-primary" data-bs-toggle="collapse" href="#searchUser" role="button" aria-expanded="false" aria-controls="collapseExample">Search</a>
</div>
<div class="mb-2">
    <div id="searchUser" class="card card-body shadow collapse">
        <form asp-action="Details" method="get" class="col-md-4">
            @* <div asp-validation-summary="ModelOnly" class="text-danger"></div>  *@ 
             <div class="form-group mb-2"> 
                 <label class="control-label" for="id">Search User:</label>
                 <input required class="form-control" id="id" name="id" maxlength="20"/> 
                 <div class="form-text">Enter the username of the person you want to search.</div>
             </div> 
             <div class="form-group"> 
                 <input type="submit" value="Search" class="btn btn-primary" /> 
             </div> 
        </form> 
    </div>
</div>
<hr class="hr" />

<div id="tabbed">
    <ul>
        <li><a href="#friends">Your Friends (@Model.Count())</a></li>
        <li><a href="#waiting">Friend Requests (@waiting.Count())</a></li>
        <li><a href="#pending">Pending Requests (@pending.Count())</a></li>
    </ul>
<div id="friends">
    <h4>Your Friends</h4>
    <hr class="hr"/>
        @if(Model.Count() == 0)
        {
            <h5 class="text-warning">You have no friends!</h5>
        }
        else
        {
            <table class="table table-striped table-hover">
                <caption>Total Friends: @Model.Count()</caption>
                    <thead>
                        <tr>
                            <th scope="col">
                                @Html.DisplayNameFor(model => model.UserFriendID)
                            </th>
                            <th scope="col">
                                @Html.DisplayNameFor(model => model.UserFriendDate)
                            </th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody class="table-group-divider">
                        @foreach (var item in Model) {
                            <tr>
                                <td scope="row">
                                    @Html.DisplayFor(modelItem => item.UserFriendID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserFriendDate)
                                </td>
                                <td align="right">
                                    @Html.ActionLink("View Profile", "Details", new { id = item.UserFriendID }, new { @class = "btn btn-outline-secondary" })
                                    @Html.ActionLink("Remove Friend", "Delete", new { id = item.UserFriendID }, new { @class = "btn btn-outline-danger" })
                                </td>
                            </tr>
                        }
                    </tbody>
            </table>
        }
</div>
<div id="waiting">
    <h4>Friend Requests</h4>
    <hr class="hr" />
        @if(waiting.Count() == 0)
        {
            <h5 class="text-warning">You have no friend requests!</h5>
        }
        else
        {
            <table class="table table-striped table-hover">
                <caption>Total Friend Requests: @waiting.Count()</caption>
                <thead>
                    <tr>
                        <th scope="col">User</th>
                        <th scope="col"></th>
                    </tr>
                 </thead>
                 <tbody class="table-group-divider">
                    @foreach (UserFriend wait in waiting)
                    {
                        <tr>
                            <td scope="row">
                                @Html.DisplayFor(modelItem => wait.UserFriendID)
                            </td>
                            <td align="right">
                                @Html.ActionLink("View Profile", "Details", new { id = wait.UserFriendID }, new { @class = "btn btn-outline-secondary"} )
                                @Html.ActionLink("Accept Friend Request", "Accept", new { id = wait.UserFriendID }, new { @class = "btn btn-outline-success" } )
                                @Html.ActionLink("Reject Friend Request", "Reject", new { id = wait.UserFriendID }, new { @class = "btn btn-outline-danger" } )
                            </td>
                        </tr>
                    }
                 </tbody>
            </table>
        }
</div>
<div id="pending">
    <h4>Pending Requests</h4>
    <hr class="hr"/>
        @if(pending.Count() == 0)
        {
            <h5 class="text-warning">You have no pending requests!</h5>
        }
        else
        {
            <table class="table table-striped table-hover">
                <caption>Total Pending Requests: @pending.Count()</caption>
                <thead>
                    <tr>
                        <th scope="col">User</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @foreach (UserFriend pend in pending)
                    {
                        <tr>
                            <td scope="row">
                                @Html.DisplayFor(modelItem => pend.UserFriendID)
                            </td>
                            <td align="right">
                                @Html.ActionLink("View Profile", "Details", new { id = pend.UserFriendID }, new { @class = "btn btn-outline-secondary" })
                                @Html.ActionLink("Cancel Friend Request", "Cancel", new { id = pend.UserFriendID }, new { @class = "btn btn-outline-warning" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
</div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}